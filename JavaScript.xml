<templateSet group="JavaScript">
  <template name="des" value="$const$ {$field$} = $variable$;" description="es6 destructuring of js variable" toReformat="true" toShortenFQNames="true">
    <variable name="variable" expression="enum(&quot;this.props&quot;,&quot;this.state&quot;,&quot;this.refs&quot;,&quot;this.context&quot;)" defaultValue="&quot;this.props&quot;" alwaysStopAt="true" />
    <variable name="field" expression="" defaultValue="&quot;id&quot;" alwaysStopAt="true" />
    <variable name="const" expression="enum(&quot;const&quot;,&quot;let&quot;)" defaultValue="&quot;const&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cl" value="console.log(&quot;$variable$&quot;);" description="console.log(&quot;message&quot;)" toReformat="true" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="jsMethodName()" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="clv" value="console.log(&quot;$variable$:&quot;, $variable$);" description="console.log(&quot;variable:&quot;, variable)" toReformat="true" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cc" value="console.count(&quot;$message$&quot;);" description="console.count(&quot;message&quot;)" toReformat="true" toShortenFQNames="true">
    <variable name="message" expression="" defaultValue="jsMethodName()" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="af" value="($params$) =&gt; {&#10;  $END$&#10;}" description="Arrow Function - ES6" toReformat="true" toShortenFQNames="true">
    <variable name="params" expression="" defaultValue="&quot;&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="cw" value="console.warn(&quot;$message$&quot;);" description="console.warn(&quot;message&quot;)" toReformat="true" toShortenFQNames="true">
    <variable name="message" expression="" defaultValue="&quot;message&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="comp" value="import React, {Component} from &quot;react&quot;;&#10;import PropTypes from &quot;prop-types&quot;;&#10;&#10;export default class $componentName$ extends Component {&#10;    static propTypes = {&#10;        &#10;    };&#10;    &#10;    render() {&#10;        return (&#10;            &lt;div&gt;&#10;                $END$&#10;            &lt;/div&gt;&#10;        );&#10;    }&#10;}" description="Reactive Component" toReformat="true" toShortenFQNames="true">
    <variable name="componentName" expression="capitalize(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="if" value="&lt;If condition={$condition$}&gt;&#10;    $END$&#10;&lt;/If&gt;" description="JSX if control statement" toReformat="true" toShortenFQNames="true">
    <variable name="condition" expression="" defaultValue="&quot;true&quot;" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="for" value="&lt;For each=&quot;$itemName$&quot; of={$collection$} index=&quot;index&quot;&gt;&#10;    $END$&#10;&lt;/For&gt;" description="JSX for control statement" toReformat="true" toShortenFQNames="true">
    <variable name="itemName" expression="" defaultValue="&quot;item&quot;" alwaysStopAt="true" />
    <variable name="collection" expression="" defaultValue="&quot;collection&quot;" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="choose" value="&lt;Choose&gt;&#10;    &lt;When condition={$condition$}&gt;&#10;        $END$&#10;    &lt;/When&gt;&#10;    &lt;Otherwise&gt;&#10;        &#10;    &lt;/Otherwise&gt;&#10;&lt;/Choose&gt;" description="JSX choose control statement" toReformat="true" toShortenFQNames="true">
    <variable name="condition" expression="" defaultValue="&quot;true&quot;" alwaysStopAt="true" />
    <context>
      <option name="JSX_HTML" value="true" />
    </context>
  </template>
  <template name="pt" value="PropTypes.$propType$$isRequired$" description="insert PropType definition" toReformat="true" toShortenFQNames="true">
    <variable name="propType" expression="enum(&quot;func&quot;,&quot;object&quot;,&quot;array&quot;,&quot;bool&quot;,&quot;number&quot;,&quot;string&quot;,&quot;any&quot;,&quot;arrayOf()&quot;,&quot;element&quot;,&quot;instanceOf()&quot;,&quot;node&quot;,&quot;objectOf()&quot;,&quot;oneOf([])&quot;,&quot;oneOfType([])&quot;,&quot;shape({})&quot;)" defaultValue="" alwaysStopAt="true" />
    <variable name="isRequired" expression="enum(&quot;&quot;,&quot;.isRequired&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
    </context>
  </template>
  <template name="rlc" value="$functionName$() {&#10;  $END$&#10;}" description="react Lifecicle method" toReformat="true" toShortenFQNames="true">
    <variable name="functionName" expression="enum(&quot;componentWillMount&quot;,&quot;componentDidMount&quot;,&quot;componentWillReceiveProps&quot;,&quot;shouldComponentUpdate&quot;,&quot;componentWillUpdate&quot;,&quot;componentDidUpdate&quot;,&quot;componentWillUnmount&quot;)" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="rc" value="constructor(props) {&#10;  super(props);&#10;  &#10;  this.state = {$END$};&#10;}" description="react constructor" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_STATEMENT" value="false" />
    </context>
  </template>
  <template name="cd" value="console.debug(&quot;$message$&quot;);" description="console.debug(&quot;message&quot;)" toReformat="true" toShortenFQNames="true">
    <variable name="message" expression="" defaultValue="jsMethodName()" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cdv" value="console.debug(&quot;$variable$:&quot;, $variable$);" description="console.debug(&quot;variable:&quot;, variable)" toReformat="true" toShortenFQNames="true">
    <variable name="variable" expression="" defaultValue="&quot;variable&quot;" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="iife" value="(function () {&#10;  $SELECTION$&#10;  $END$&#10;})();" description="Immediately-invoked Function Expression" toReformat="true" toShortenFQNames="true">
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JSX_HTML" value="false" />
    </context>
  </template>
  <template name="edf" value="export default function ($params$) {&#10;  $END$&#10;}" description="export default function" toReformat="true" toShortenFQNames="true">
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="ms" value="import {observable, computed, action} from &quot;mobx&quot;;&#10;&#10;export default class $className$ {&#10;  $END$&#10;}" description="mobx Store" toReformat="true" toShortenFQNames="true">
    <variable name="className" expression="capitalize(fileNameWithoutExtension())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="afn" value="function ($params$) {&#10;  $END$&#10;}" description="insert anonymous function" toReformat="true" toShortenFQNames="true">
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="cf" value="$functionName$($params$) {&#10;  $END$&#10;}" description="insert function in class scope" toReformat="true" toShortenFQNames="true">
    <variable name="functionName" expression="" defaultValue="&quot;functionName&quot;" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
      <option name="JS_EXPRESSION" value="false" />
      <option name="JS_STATEMENT" value="false" />
    </context>
  </template>
  <template name="im" value="import $importName$ from &quot;$path$&quot;;$END$" description="import statement" toReformat="true" toShortenFQNames="true">
    <variable name="path" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="importName" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="caf" value="$functionName$ = ($params$) =&gt; {&#10;  $END$&#10;};" description="insert arrow function in class scope" toReformat="true" toShortenFQNames="true">
    <variable name="functionName" expression="" defaultValue="&quot;functionName&quot;" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_SCRIPT" value="true" />
    </context>
  </template>
  <template name="fn" value="function $functionName$($params$) {&#10;  $END$&#10;}" description="insert named function" toReformat="true" toShortenFQNames="true">
    <variable name="functionName" expression="" defaultValue="&quot;functionName&quot;" alwaysStopAt="true" />
    <variable name="params" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JS_EXPRESSION" value="true" />
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
  <template name="edc" value="export default class $ClassName$ {&#10;  $END$&#10;}" description="export default class" toReformat="true" toShortenFQNames="true">
    <variable name="ClassName" expression="fileNameWithoutExtension()" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JS_STATEMENT" value="true" />
    </context>
  </template>
</templateSet>